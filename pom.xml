<?xml version='1.0' encoding='UTF-8'?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.oci.sdk</groupId>
  <artifactId>go-sdk</artifactId>
  <version>0.0.1</version>
  <name>Public Go SDK</name>
  <properties>
    <preprocessor-version>1.0.12</preprocessor-version>
    <oci.get.spec.artifact.plugin.version>1.0.12</oci.get.spec.artifact.plugin.version>
    <spec-temp-dir>${project.build.directory}/swagger</spec-temp-dir>
    <preferred-temp-dir>${project.build.directory}/preferred</preferred-temp-dir>
    <preprocessed-temp-dir>${project.build.directory}/preprocessed</preprocessed-temp-dir>
    <enabled-groups-file>${project.basedir}/preview-sdk.txt</enabled-groups-file>
    <enabled-groups-dir>${project.basedir}/codegenConfig/enabledGroups</enabled-groups-dir>
    <feature-id-file>${project.basedir}/featureId.yaml</feature-id-file>
    <feature-id-dir>${project.basedir}/codegenConfig/featureIds</feature-id-dir>
    <fullyQualifiedProjectName>${env.PROJECT_NAME}</fullyQualifiedProjectName>
    <generationType>PREVIEW</generationType>
    <inceptionYear>2017</inceptionYear>
    <coreservices-api-spec-spec-file>source/coreservices-api-spec-20160918.cond.yaml</coreservices-api-spec-spec-file>
    <identity-control-plane-api-spec-spec-file>source/identity-control-plane-api-spec-20160918.cond.yaml</identity-control-plane-api-spec-spec-file>
    <casper-api-spec-spec-file>source/casper-api.cond.yaml</casper-api-spec-spec-file>
    <oralb-api-spec-spec-file>source/spec-20170115.cond.yaml</oralb-api-spec-spec-file>
    <dbaas-api-spec-spec-file>source/dbaas-api-spec-20160918.cond.yaml</dbaas-api-spec-spec-file>
    <fss-api-spec-spec-file>source/fss-api-spec-20171215.cond.yaml</fss-api-spec-spec-file>
    <hemlock-spec-spec-file>source/hemlock-api-20190901.cond.yaml</hemlock-spec-spec-file>
    <email-api-spec-spec-file>source/email-api-spec.cond.yaml</email-api-spec-spec-file>
    <public-dns-api-spec-spec-file>source/public-dns-api-spec.cond.yaml</public-dns-api-spec-spec-file>
    <maestro-spec-spec-file>source/api.cond.yaml</maestro-spec-spec-file>
    <kms-api-spec-spec-file>source/kms-api-spec-20180608.cond.yaml</kms-api-spec-spec-file>
    <resource-query-service-spec-spec-file>source/rqs.cond.yaml</resource-query-service-spec-spec-file>
    <clusters-api-spec-spec-file>source/clusters-api-spec.cond.yaml</clusters-api-spec-spec-file>
    <telemetry-public-api-spec-spec-file>source/telemetry-api.cond.yaml</telemetry-public-api-spec-spec-file>
    <workrequests-api-spec-spec-file>workrequests-api-spec.cond.yaml</workrequests-api-spec-spec-file>
    <ons-gateway-spec-spec-file>source/notification-api.cond.yaml</ons-gateway-spec-spec-file>
    <healthchecks-api-spec-spec-file>health-checks-api-spec-20180501.cond.yaml</healthchecks-api-spec-spec-file>
    <rest-api-spec-spec-file>source/api.cond.yaml</rest-api-spec-spec-file>
    <oracache-public-api-spec-file>specs/oracache-public-api-20190501.cond.yaml</oracache-public-api-spec-file>
    <marketplace-consumer-service-spec-spec-file>source/consumer-service-api.cond.yaml</marketplace-consumer-service-spec-spec-file>
    <autoscaling-public-api-spec-spec-file>source/autoscaling-api-spec.cond.yaml</autoscaling-public-api-spec-spec-file>
    <usage-proxy-spec-spec-file>api.yaml</usage-proxy-spec-spec-file>
    <announcements-service-spec-spec-file>source/announcement-service.cond.yaml</announcements-service-spec-spec-file>
    <oci-waas-api-spec-spec-file>source/oci-waas-api-spec.cond.yaml</oci-waas-api-spec-spec-file>
    <batchservice-api-spec-spec-file>source/batchservice.cond.yaml</batchservice-api-spec-spec-file>
    <fn-api-spec-spec-file>source/functions-api-spec.cond.yaml</fn-api-spec-spec-file>
    <budgets-control-plane-spec-spec-file>budget.api.cond.yaml</budgets-control-plane-spec-spec-file>
    <quotas-control-plane-api-spec-spec-file>quotas-control-plane-api-spec-20181025.cond.yaml</quotas-control-plane-api-spec-spec-file>
    <digital-assistant-spec-spec-file>source/digital-assistant-api.cond.yaml</digital-assistant-spec-spec-file>
    <csg-api-spec-spec-file>source/storage-gateway-api.cond.yaml</csg-api-spec-spec-file>
    <dts-api-spec-spec-file>datats-customer-control-plane.cond.yaml</dts-api-spec-spec-file>
    <public-api-spec-spec-file>source/api.cond.yaml</public-api-spec-spec-file>
    <events-control-plane-spec-spec-file>source/events-control-plane-spec.cond.yaml</events-control-plane-spec-spec-file>
    <cloud-incident-management-service-spec-spec-file>api.yaml</cloud-incident-management-service-spec-spec-file>
    <ndcs-control-plane-spec-spec-file>source/api.cond.yaml</ndcs-control-plane-spec-spec-file>
    <datacatalog-api-spec-spec-file>datacatalog-api-spec.cond.yaml</datacatalog-api-spec-spec-file>
    <cec-public-spec-spec-file>source/api.cond.yaml</cec-public-spec-spec-file>
    <odsc-pegasus-control-plane-spec-spec-file>source/api.cond.yaml</odsc-pegasus-control-plane-spec-spec-file>
    <bds-cp-spec-spec-file>source/bds-cp.cond.yaml</bds-cp-spec-spec-file>
    <analytics-control-plane-api-spec-spec-file>source/analytics-api-spec.cond.yaml</analytics-control-plane-api-spec-spec-file>
    <oracle-integration-cp-apiserver-user-spec-spec-file>source/api.cond.yaml</oracle-integration-cp-apiserver-user-spec-spec-file>
    <kam-api-spec-spec-file>source/kam-api-spec.cond.yaml</kam-api-spec-spec-file>
    <ibex-frontend-public-spec-spec-file>source/public-api.cond.yaml</ibex-frontend-public-spec-spec-file>
    <osms-spec-spec-file>source/api.cond.yaml</osms-spec-spec-file>
    <ams-spec-spec-file>source/ams-api.cond.yaml</ams-spec-spec-file>
    <service_api_spec-spec-file>specs/service_api.cond.yaml</service_api_spec-spec-file>
    <mysqlaas-api-spec-spec-file>source/mysqlaas-api-spec.cond.yaml</mysqlaas-api-spec-spec-file>
    <oci-sms-dp-api-spec-spec-file>source/oci-sms-dp-api-spec.cond.yaml</oci-sms-dp-api-spec-spec-file>
    <oci-sms-api-spec-spec-file>source/oci-sms-api-spec.cond.yaml</oci-sms-api-spec-spec-file>
    <oracle-blockchain-platform-spec-spec-file>source/blockchain-api.cond.yaml</oracle-blockchain-platform-spec-spec-file>
    <ads-control-plane-spec-spec-file>api.cond.yaml</ads-control-plane-spec-spec-file>
    <compliance-document-service-spec-spec-file>source/api.cond.yaml</compliance-document-service-spec-spec-file>
    <dis-sdk-spec-spec-file>source/dis-api.cond.yaml</dis-sdk-spec-spec-file>
    <hydra-controlplane-api-spec-spec-file>source/public-api.cond.yaml</hydra-controlplane-api-spec-spec-file>
  </properties>
  <dependencies>
    <dependency>
      <groupId>com.oracle.pic.commons</groupId>
      <artifactId>coreservices-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.identity</groupId>
      <artifactId>identity-control-plane-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.casper</groupId>
      <artifactId>casper-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.lb</groupId>
      <artifactId>oralb-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.dbaas</groupId>
      <artifactId>dbaas-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.ffsw</groupId>
      <artifactId>fss-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.sherlock</groupId>
      <artifactId>hemlock-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.email</groupId>
      <artifactId>email-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.dns.pub</groupId>
      <artifactId>public-dns-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.orchestration.orm</groupId>
      <artifactId>maestro-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.kms</groupId>
      <artifactId>kms-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.query</groupId>
      <artifactId>resource-query-service-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.clusters</groupId>
      <artifactId>clusters-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.telemetry.api</groupId>
      <artifactId>telemetry-public-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.commons.workrequests</groupId>
      <artifactId>workrequests-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.ons</groupId>
      <artifactId>ons-gateway-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.oci</groupId>
      <artifactId>healthchecks-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.oss</groupId>
      <artifactId>rest-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.oracache</groupId>
      <artifactId>oracache-public-api</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.oci.marketplace</groupId>
      <artifactId>marketplace-consumer-service-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.autoscaling.api</groupId>
      <artifactId>autoscaling-public-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.usage</groupId>
      <artifactId>usage-proxy-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.announcements</groupId>
      <artifactId>announcements-service-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.oci.waas</groupId>
      <artifactId>oci-waas-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.obcs</groupId>
      <artifactId>batchservice-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.functions</groupId>
      <artifactId>fn-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.oci.usage.budgets</groupId>
      <artifactId>budgets-control-plane-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.oci.quotas</groupId>
      <artifactId>quotas-control-plane-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.oda.cp</groupId>
      <artifactId>digital-assistant-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.oci.csg</groupId>
      <artifactId>csg-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.rhino</groupId>
      <artifactId>dts-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.apigw</groupId>
      <artifactId>public-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.events</groupId>
      <artifactId>events-control-plane-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.custops.cims</groupId>
      <artifactId>cloud-incident-management-service-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>oracle.nosql.oci.controlplane</groupId>
      <artifactId>ndcs-control-plane-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.dcat</groupId>
      <artifactId>datacatalog-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.cec.provisioning.controlplane</groupId>
      <artifactId>cec-public-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.odsc.pegasus</groupId>
      <artifactId>odsc-pegasus-control-plane-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.bds</groupId>
      <artifactId>bds-cp-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.analytics</groupId>
      <artifactId>analytics-control-plane-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.oracleintegration.spec</groupId>
      <artifactId>oracle-integration-cp-apiserver-user-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.kam</groupId>
      <artifactId>kam-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.oci.hydra.ibex</groupId>
      <artifactId>ibex-frontend-public-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.osms.api</groupId>
      <artifactId>osms-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.migration.application</groupId>
      <artifactId>ams-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>oracle.dfcs.server</groupId>
      <artifactId>service_api_spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.oci.mysql</groupId>
      <artifactId>mysqlaas-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.ocisms.dataplane</groupId>
      <artifactId>oci-sms-dp-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.ocisms.controlplane</groupId>
      <artifactId>oci-sms-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.blockchain</groupId>
      <artifactId>oracle-blockchain-platform-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.ads.admin.cp</groupId>
      <artifactId>ads-control-plane-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.compdocs</groupId>
      <artifactId>compliance-document-service-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.dis</groupId>
      <artifactId>dis-sdk-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.hydra.controlplane</groupId>
      <artifactId>hydra-controlplane-api-spec</artifactId>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>timestamp-property</id>
            <goals>
              <goal>timestamp-property</goal>
            </goals>
            <phase>validate</phase>
            <configuration>
              <name>current.year</name>
              <pattern>yyyy</pattern>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.oracle.oci.sdk.utilities</groupId>
        <artifactId>dex-get-spec-artifact-plugin</artifactId>
        <version>${oci.get.spec.artifact.plugin.version}</version>
        <executions>
          <execution>
            <id>unpack-coreservices-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.commons</groupId>
                  <artifactId>coreservices-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/coreservices-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-identity-control-plane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.identity</groupId>
                  <artifactId>identity-control-plane-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/identity-control-plane-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-casper-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.casper</groupId>
                  <artifactId>casper-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/casper-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-oralb-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.lb</groupId>
                  <artifactId>oralb-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/oralb-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-dbaas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.dbaas</groupId>
                  <artifactId>dbaas-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/dbaas-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-fss-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.ffsw</groupId>
                  <artifactId>fss-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/fss-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-hemlock-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.sherlock</groupId>
                  <artifactId>hemlock-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/hemlock-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-email-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.email</groupId>
                  <artifactId>email-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/email-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-public-dns-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.dns.pub</groupId>
                  <artifactId>public-dns-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/public-dns-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-maestro-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.orchestration.orm</groupId>
                  <artifactId>maestro-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/maestro-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-kms-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.kms</groupId>
                  <artifactId>kms-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/kms-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-resource-query-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.query</groupId>
                  <artifactId>resource-query-service-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/resource-query-service-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-clusters-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.clusters</groupId>
                  <artifactId>clusters-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/clusters-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-telemetry-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.telemetry.api</groupId>
                  <artifactId>telemetry-public-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/telemetry-public-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-workrequests-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.commons.workrequests</groupId>
                  <artifactId>workrequests-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/workrequests-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-ons-gateway-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.ons</groupId>
                  <artifactId>ons-gateway-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/ons-gateway-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-healthchecks-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci</groupId>
                  <artifactId>healthchecks-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/healthchecks-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-rest-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.oss</groupId>
                  <artifactId>rest-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/rest-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-oracache-public-api</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oracache</groupId>
                  <artifactId>oracache-public-api</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/oracache-public-api</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-marketplace-consumer-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci.marketplace</groupId>
                  <artifactId>marketplace-consumer-service-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/marketplace-consumer-service-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-autoscaling-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.autoscaling.api</groupId>
                  <artifactId>autoscaling-public-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/autoscaling-public-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-usage-proxy-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.usage</groupId>
                  <artifactId>usage-proxy-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/usage-proxy-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-announcements-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.announcements</groupId>
                  <artifactId>announcements-service-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/announcements-service-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-oci-waas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci.waas</groupId>
                  <artifactId>oci-waas-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/oci-waas-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-batchservice-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.obcs</groupId>
                  <artifactId>batchservice-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/batchservice-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-fn-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.functions</groupId>
                  <artifactId>fn-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/fn-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-budgets-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci.usage.budgets</groupId>
                  <artifactId>budgets-control-plane-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/budgets-control-plane-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-quotas-control-plane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci.quotas</groupId>
                  <artifactId>quotas-control-plane-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/quotas-control-plane-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-digital-assistant-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.oda.cp</groupId>
                  <artifactId>digital-assistant-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/digital-assistant-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-csg-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci.csg</groupId>
                  <artifactId>csg-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/csg-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-dts-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.rhino</groupId>
                  <artifactId>dts-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/dts-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.apigw</groupId>
                  <artifactId>public-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/public-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-events-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.events</groupId>
                  <artifactId>events-control-plane-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/events-control-plane-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-cloud-incident-management-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.custops.cims</groupId>
                  <artifactId>cloud-incident-management-service-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/cloud-incident-management-service-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-ndcs-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>oracle.nosql.oci.controlplane</groupId>
                  <artifactId>ndcs-control-plane-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/ndcs-control-plane-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-datacatalog-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.dcat</groupId>
                  <artifactId>datacatalog-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/datacatalog-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-cec-public-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.cec.provisioning.controlplane</groupId>
                  <artifactId>cec-public-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/cec-public-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-odsc-pegasus-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.odsc.pegasus</groupId>
                  <artifactId>odsc-pegasus-control-plane-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/odsc-pegasus-control-plane-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-bds-cp-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.bds</groupId>
                  <artifactId>bds-cp-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/bds-cp-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-analytics-control-plane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.analytics</groupId>
                  <artifactId>analytics-control-plane-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/analytics-control-plane-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-oracle-integration-cp-apiserver-user-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oracleintegration.spec</groupId>
                  <artifactId>oracle-integration-cp-apiserver-user-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/oracle-integration-cp-apiserver-user-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-kam-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.kam</groupId>
                  <artifactId>kam-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/kam-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-ibex-frontend-public-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci.hydra.ibex</groupId>
                  <artifactId>ibex-frontend-public-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/ibex-frontend-public-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-osms-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.osms.api</groupId>
                  <artifactId>osms-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/osms-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-ams-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.migration.application</groupId>
                  <artifactId>ams-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/ams-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-service_api_spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>oracle.dfcs.server</groupId>
                  <artifactId>service_api_spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/service_api_spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-mysqlaas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci.mysql</groupId>
                  <artifactId>mysqlaas-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/mysqlaas-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-oci-sms-dp-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.ocisms.dataplane</groupId>
                  <artifactId>oci-sms-dp-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/oci-sms-dp-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-oci-sms-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.ocisms.controlplane</groupId>
                  <artifactId>oci-sms-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/oci-sms-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-oracle-blockchain-platform-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.blockchain</groupId>
                  <artifactId>oracle-blockchain-platform-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/oracle-blockchain-platform-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-ads-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.ads.admin.cp</groupId>
                  <artifactId>ads-control-plane-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/ads-control-plane-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-compliance-document-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.compdocs</groupId>
                  <artifactId>compliance-document-service-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/compliance-document-service-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-dis-sdk-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.dis</groupId>
                  <artifactId>dis-sdk-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/dis-sdk-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-hydra-controlplane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.hydra.controlplane</groupId>
                  <artifactId>hydra-controlplane-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/hydra-controlplane-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.oracle.oci.sdk.utilities</groupId>
        <artifactId>spec-conditionals-preprocessor-plugin</artifactId>
        <version>${preprocessor-version}</version>
        <executions>
          <execution>
            <id>spec-conditionals-prefer-coreservices-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/coreservices-api-spec/source/${coreservices-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/coreservices-api-spec/${coreservices-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/coreservices-api-spec/${coreservices-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-coreservices-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/coreservices-api-spec/${coreservices-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/coreservices-api-spec/${coreservices-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-identity-control-plane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/identity-control-plane-api-spec/source/${identity-control-plane-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/identity-control-plane-api-spec/${identity-control-plane-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/identity-control-plane-api-spec/${identity-control-plane-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-identity-control-plane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/identity-control-plane-api-spec/${identity-control-plane-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/identity-control-plane-api-spec/${identity-control-plane-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-casper-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/casper-api-spec/source/${casper-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/casper-api-spec/${casper-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/casper-api-spec/${casper-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-casper-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/casper-api-spec/${casper-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/casper-api-spec/${casper-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-oralb-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/oralb-api-spec/source/${oralb-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/oralb-api-spec/${oralb-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/oralb-api-spec/${oralb-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-oralb-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/oralb-api-spec/${oralb-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/oralb-api-spec/${oralb-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-dbaas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/dbaas-api-spec/source/${dbaas-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/dbaas-api-spec/${dbaas-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/dbaas-api-spec/${dbaas-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-dbaas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/dbaas-api-spec/${dbaas-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/dbaas-api-spec/${dbaas-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-fss-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/fss-api-spec/source/${fss-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/fss-api-spec/${fss-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/fss-api-spec/${fss-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-fss-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/fss-api-spec/${fss-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/fss-api-spec/${fss-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-hemlock-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/hemlock-spec/source/${hemlock-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/hemlock-spec/${hemlock-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/hemlock-spec/${hemlock-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-hemlock-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/hemlock-spec/${hemlock-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/hemlock-spec/${hemlock-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-email-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/email-api-spec/source/${email-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/email-api-spec/${email-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/email-api-spec/${email-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-email-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/email-api-spec/${email-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/email-api-spec/${email-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-public-dns-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/public-dns-api-spec/source/${public-dns-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/public-dns-api-spec/${public-dns-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/public-dns-api-spec/${public-dns-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-public-dns-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/public-dns-api-spec/${public-dns-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/public-dns-api-spec/${public-dns-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-maestro-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/maestro-spec/source/${maestro-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/maestro-spec/${maestro-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/maestro-spec/${maestro-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-maestro-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/maestro-spec/${maestro-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/maestro-spec/${maestro-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-kms-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/kms-api-spec/source/${kms-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/kms-api-spec/${kms-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/kms-api-spec/${kms-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-kms-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/kms-api-spec/${kms-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/kms-api-spec/${kms-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-resource-query-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/resource-query-service-spec/source/${resource-query-service-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/resource-query-service-spec/${resource-query-service-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/resource-query-service-spec/${resource-query-service-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-resource-query-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/resource-query-service-spec/${resource-query-service-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/resource-query-service-spec/${resource-query-service-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-clusters-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/clusters-api-spec/source/${clusters-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/clusters-api-spec/${clusters-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/clusters-api-spec/${clusters-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-clusters-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/clusters-api-spec/${clusters-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/clusters-api-spec/${clusters-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-telemetry-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/telemetry-public-api-spec/source/${telemetry-public-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/telemetry-public-api-spec/${telemetry-public-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/telemetry-public-api-spec/${telemetry-public-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-telemetry-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/telemetry-public-api-spec/${telemetry-public-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/telemetry-public-api-spec/${telemetry-public-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-workrequests-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/workrequests-api-spec/source/${workrequests-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/workrequests-api-spec/${workrequests-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/workrequests-api-spec/${workrequests-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-workrequests-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/workrequests-api-spec/${workrequests-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/workrequests-api-spec/${workrequests-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-ons-gateway-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/ons-gateway-spec/source/${ons-gateway-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/ons-gateway-spec/${ons-gateway-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/ons-gateway-spec/${ons-gateway-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-ons-gateway-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/ons-gateway-spec/${ons-gateway-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/ons-gateway-spec/${ons-gateway-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-healthchecks-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/healthchecks-api-spec/source/${healthchecks-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/healthchecks-api-spec/${healthchecks-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/healthchecks-api-spec/${healthchecks-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-healthchecks-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/healthchecks-api-spec/${healthchecks-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/healthchecks-api-spec/${healthchecks-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-rest-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/rest-api-spec/source/${rest-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/rest-api-spec/${rest-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/rest-api-spec/${rest-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-rest-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/rest-api-spec/${rest-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/rest-api-spec/${rest-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-oracache-public-api</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/oracache-public-api/source/${oracache-public-api-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/oracache-public-api/${oracache-public-api-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/oracache-public-api/${oracache-public-api-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-oracache-public-api</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/oracache-public-api/${oracache-public-api-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/oracache-public-api/${oracache-public-api-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-marketplace-consumer-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/marketplace-consumer-service-spec/source/${marketplace-consumer-service-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/marketplace-consumer-service-spec/${marketplace-consumer-service-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/marketplace-consumer-service-spec/${marketplace-consumer-service-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-marketplace-consumer-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/marketplace-consumer-service-spec/${marketplace-consumer-service-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/marketplace-consumer-service-spec/${marketplace-consumer-service-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-autoscaling-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/autoscaling-public-api-spec/source/${autoscaling-public-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/autoscaling-public-api-spec/${autoscaling-public-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/autoscaling-public-api-spec/${autoscaling-public-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-autoscaling-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/autoscaling-public-api-spec/${autoscaling-public-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/autoscaling-public-api-spec/${autoscaling-public-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-usage-proxy-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/usage-proxy-spec/source/${usage-proxy-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/usage-proxy-spec/${usage-proxy-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/usage-proxy-spec/${usage-proxy-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-usage-proxy-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/usage-proxy-spec/${usage-proxy-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/usage-proxy-spec/${usage-proxy-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-announcements-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/announcements-service-spec/source/${announcements-service-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/announcements-service-spec/${announcements-service-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/announcements-service-spec/${announcements-service-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-announcements-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/announcements-service-spec/${announcements-service-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/announcements-service-spec/${announcements-service-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-oci-waas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/oci-waas-api-spec/source/${oci-waas-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/oci-waas-api-spec/${oci-waas-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/oci-waas-api-spec/${oci-waas-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-oci-waas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/oci-waas-api-spec/${oci-waas-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/oci-waas-api-spec/${oci-waas-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-batchservice-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/batchservice-api-spec/source/${batchservice-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/batchservice-api-spec/${batchservice-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/batchservice-api-spec/${batchservice-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-batchservice-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/batchservice-api-spec/${batchservice-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/batchservice-api-spec/${batchservice-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-fn-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/fn-api-spec/source/${fn-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/fn-api-spec/${fn-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/fn-api-spec/${fn-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-fn-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/fn-api-spec/${fn-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/fn-api-spec/${fn-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-budgets-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/budgets-control-plane-spec/source/${budgets-control-plane-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/budgets-control-plane-spec/${budgets-control-plane-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/budgets-control-plane-spec/${budgets-control-plane-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-budgets-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/budgets-control-plane-spec/${budgets-control-plane-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/budgets-control-plane-spec/${budgets-control-plane-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-quotas-control-plane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/quotas-control-plane-api-spec/source/${quotas-control-plane-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/quotas-control-plane-api-spec/${quotas-control-plane-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/quotas-control-plane-api-spec/${quotas-control-plane-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-quotas-control-plane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/quotas-control-plane-api-spec/${quotas-control-plane-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/quotas-control-plane-api-spec/${quotas-control-plane-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-digital-assistant-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/digital-assistant-spec/source/${digital-assistant-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/digital-assistant-spec/${digital-assistant-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/digital-assistant-spec/${digital-assistant-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-digital-assistant-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/digital-assistant-spec/${digital-assistant-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/digital-assistant-spec/${digital-assistant-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-csg-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/csg-api-spec/source/${csg-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/csg-api-spec/${csg-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/csg-api-spec/${csg-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-csg-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/csg-api-spec/${csg-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/csg-api-spec/${csg-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-dts-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/dts-api-spec/source/${dts-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/dts-api-spec/${dts-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/dts-api-spec/${dts-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-dts-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/dts-api-spec/${dts-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/dts-api-spec/${dts-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/public-api-spec/source/${public-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/public-api-spec/${public-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/public-api-spec/${public-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/public-api-spec/${public-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/public-api-spec/${public-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-events-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/events-control-plane-spec/source/${events-control-plane-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/events-control-plane-spec/${events-control-plane-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/events-control-plane-spec/${events-control-plane-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-events-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/events-control-plane-spec/${events-control-plane-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/events-control-plane-spec/${events-control-plane-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-cloud-incident-management-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/cloud-incident-management-service-spec/source/${cloud-incident-management-service-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/cloud-incident-management-service-spec/${cloud-incident-management-service-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/cloud-incident-management-service-spec/${cloud-incident-management-service-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-cloud-incident-management-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/cloud-incident-management-service-spec/${cloud-incident-management-service-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/cloud-incident-management-service-spec/${cloud-incident-management-service-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-ndcs-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/ndcs-control-plane-spec/source/${ndcs-control-plane-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/ndcs-control-plane-spec/${ndcs-control-plane-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/ndcs-control-plane-spec/${ndcs-control-plane-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-ndcs-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/ndcs-control-plane-spec/${ndcs-control-plane-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/ndcs-control-plane-spec/${ndcs-control-plane-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-datacatalog-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/datacatalog-api-spec/source/${datacatalog-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/datacatalog-api-spec/${datacatalog-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/datacatalog-api-spec/${datacatalog-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-datacatalog-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/datacatalog-api-spec/${datacatalog-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/datacatalog-api-spec/${datacatalog-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-cec-public-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/cec-public-spec/source/${cec-public-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/cec-public-spec/${cec-public-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/cec-public-spec/${cec-public-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-cec-public-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/cec-public-spec/${cec-public-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/cec-public-spec/${cec-public-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-odsc-pegasus-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/odsc-pegasus-control-plane-spec/source/${odsc-pegasus-control-plane-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/odsc-pegasus-control-plane-spec/${odsc-pegasus-control-plane-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/odsc-pegasus-control-plane-spec/${odsc-pegasus-control-plane-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-odsc-pegasus-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/odsc-pegasus-control-plane-spec/${odsc-pegasus-control-plane-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/odsc-pegasus-control-plane-spec/${odsc-pegasus-control-plane-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-bds-cp-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/bds-cp-spec/source/${bds-cp-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/bds-cp-spec/${bds-cp-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/bds-cp-spec/${bds-cp-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-bds-cp-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/bds-cp-spec/${bds-cp-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/bds-cp-spec/${bds-cp-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-analytics-control-plane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/analytics-control-plane-api-spec/source/${analytics-control-plane-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/analytics-control-plane-api-spec/${analytics-control-plane-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/analytics-control-plane-api-spec/${analytics-control-plane-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-analytics-control-plane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/analytics-control-plane-api-spec/${analytics-control-plane-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/analytics-control-plane-api-spec/${analytics-control-plane-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-oracle-integration-cp-apiserver-user-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/oracle-integration-cp-apiserver-user-spec/source/${oracle-integration-cp-apiserver-user-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/oracle-integration-cp-apiserver-user-spec/${oracle-integration-cp-apiserver-user-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/oracle-integration-cp-apiserver-user-spec/${oracle-integration-cp-apiserver-user-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-oracle-integration-cp-apiserver-user-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/oracle-integration-cp-apiserver-user-spec/${oracle-integration-cp-apiserver-user-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/oracle-integration-cp-apiserver-user-spec/${oracle-integration-cp-apiserver-user-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-kam-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/kam-api-spec/source/${kam-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/kam-api-spec/${kam-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/kam-api-spec/${kam-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-kam-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/kam-api-spec/${kam-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/kam-api-spec/${kam-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-ibex-frontend-public-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/ibex-frontend-public-spec/source/${ibex-frontend-public-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/ibex-frontend-public-spec/${ibex-frontend-public-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/ibex-frontend-public-spec/${ibex-frontend-public-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-ibex-frontend-public-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/ibex-frontend-public-spec/${ibex-frontend-public-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/ibex-frontend-public-spec/${ibex-frontend-public-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-osms-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/osms-spec/source/${osms-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/osms-spec/${osms-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/osms-spec/${osms-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-osms-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/osms-spec/${osms-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/osms-spec/${osms-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-ams-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/ams-spec/source/${ams-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/ams-spec/${ams-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/ams-spec/${ams-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-ams-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/ams-spec/${ams-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/ams-spec/${ams-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-service_api_spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/service_api_spec/source/${service_api_spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/service_api_spec/${service_api_spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/service_api_spec/${service_api_spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-service_api_spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/service_api_spec/${service_api_spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/service_api_spec/${service_api_spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-mysqlaas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/mysqlaas-api-spec/source/${mysqlaas-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/mysqlaas-api-spec/${mysqlaas-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/mysqlaas-api-spec/${mysqlaas-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-mysqlaas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/mysqlaas-api-spec/${mysqlaas-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/mysqlaas-api-spec/${mysqlaas-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-oci-sms-dp-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/oci-sms-dp-api-spec/source/${oci-sms-dp-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/oci-sms-dp-api-spec/${oci-sms-dp-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/oci-sms-dp-api-spec/${oci-sms-dp-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-oci-sms-dp-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/oci-sms-dp-api-spec/${oci-sms-dp-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/oci-sms-dp-api-spec/${oci-sms-dp-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-oci-sms-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/oci-sms-api-spec/source/${oci-sms-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/oci-sms-api-spec/${oci-sms-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/oci-sms-api-spec/${oci-sms-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-oci-sms-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/oci-sms-api-spec/${oci-sms-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/oci-sms-api-spec/${oci-sms-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-oracle-blockchain-platform-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/oracle-blockchain-platform-spec/source/${oracle-blockchain-platform-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/oracle-blockchain-platform-spec/${oracle-blockchain-platform-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/oracle-blockchain-platform-spec/${oracle-blockchain-platform-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-oracle-blockchain-platform-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/oracle-blockchain-platform-spec/${oracle-blockchain-platform-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/oracle-blockchain-platform-spec/${oracle-blockchain-platform-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-ads-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/ads-control-plane-spec/source/${ads-control-plane-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/ads-control-plane-spec/${ads-control-plane-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/ads-control-plane-spec/${ads-control-plane-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-ads-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/ads-control-plane-spec/${ads-control-plane-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/ads-control-plane-spec/${ads-control-plane-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-compliance-document-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/compliance-document-service-spec/source/${compliance-document-service-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/compliance-document-service-spec/${compliance-document-service-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/compliance-document-service-spec/${compliance-document-service-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-compliance-document-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/compliance-document-service-spec/${compliance-document-service-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/compliance-document-service-spec/${compliance-document-service-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-dis-sdk-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/dis-sdk-spec/source/${dis-sdk-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/dis-sdk-spec/${dis-sdk-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/dis-sdk-spec/${dis-sdk-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-dis-sdk-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/dis-sdk-spec/${dis-sdk-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/dis-sdk-spec/${dis-sdk-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-hydra-controlplane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/hydra-controlplane-api-spec/source/${hydra-controlplane-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/hydra-controlplane-api-spec/${hydra-controlplane-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/hydra-controlplane-api-spec/${hydra-controlplane-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-hydra-controlplane-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/hydra-controlplane-api-spec/${hydra-controlplane-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/hydra-controlplane-api-spec/${hydra-controlplane-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.oracle.bmc.sdk</groupId>
        <artifactId>bmc-sdk-swagger-maven-plugin</artifactId>
        <version>1.113-SNAPSHOT</version>
        <configuration>
          <isTestGenerationEnabled>true</isTestGenerationEnabled>
        </configuration>
        <executions>
          <execution>
            <id>go-public-sdk-identity-control-plane-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/identity-control-plane-api-spec/${identity-control-plane-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <specGenerationType>${generationType}</specGenerationType>
              <basePackage>identity</basePackage>
              <additionalProperties>
                <specName>identity</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>identity</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${project.basedir}/featureId.yaml</featureIdConfigFile>
              <featureIdConfigDir>${project.basedir}/codegenConfig/featureIds</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-coreservices-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/coreservices-api-spec/${coreservices-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>core</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>core</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>iaas</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-casper-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/casper-api-spec/${casper-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>objectstorage</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>objectstorage</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>objectstorage</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-oralb-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/oralb-api-spec/${oralb-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>loadbalancer</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>loadbalancer</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>iaas</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-dbaas-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/dbaas-api-spec/${dbaas-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>database</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>database</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>database</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-fss-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/fss-api-spec/${fss-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>filestorage</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>filestorage</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>filestorage</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-hemlock-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/hemlock-spec/${hemlock-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>audit</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>audit</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>audit</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-email-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/email-api-spec/${email-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>email</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>email</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>email</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-public-dns-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/public-dns-api-spec/${public-dns-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>dns</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>dns</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>dns</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-maestro-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/maestro-spec/${maestro-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>resourcemanager</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>resourcemanager</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>resourcemanager</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-kms-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/kms-api-spec/${kms-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>keymanagement</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>keymanagement</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>kms</serviceHostName>
                <isRegionalClient.kmscrypto>false</isRegionalClient.kmscrypto>
                <isRegionalClient.kmsmanagement>false</isRegionalClient.kmsmanagement>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-resource-query-service-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/resource-query-service-spec/${resource-query-service-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>resourcesearch</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>resourcesearch</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>query</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-clusters-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/clusters-api-spec/${clusters-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <renamingConfigFile>${project.basedir}/renaming_configs/container_engine.yaml</renamingConfigFile>
              <additionalProperties>
                <specName>containerengine</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>containerengine</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-telemetry-public-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/telemetry-public-api-spec/${telemetry-public-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>monitoring</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>monitoring</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>telemetry</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-workrequests-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/workrequests-api-spec/${workrequests-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>workrequests</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>workrequests</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>iaas</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-ons-gateway-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/ons-gateway-spec/${ons-gateway-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>ons</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>ons</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>notification</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-healthchecks-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/healthchecks-api-spec/${healthchecks-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>healthchecks</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>healthchecks</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>healthchecks</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-rest-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/rest-api-spec/${rest-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>streaming</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>streaming</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>streams</serviceHostName>
                <isRegionalClient.stream>false</isRegionalClient.stream>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-oracache-public-api</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/oracache-public-api/${oracache-public-api-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>cache</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>cache</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>caching</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-marketplace-consumer-service-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/marketplace-consumer-service-spec/${marketplace-consumer-service-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>marketplace</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>marketplace</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>marketplace</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-autoscaling-public-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/autoscaling-public-api-spec/${autoscaling-public-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>autoscaling</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>autoscaling</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>autoscaling</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-usage-proxy-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/usage-proxy-spec/${usage-proxy-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>usage</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>usage</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>identity</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-announcements-service-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/announcements-service-spec/${announcements-service-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>announcementsservice</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>announcementsservice</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>announcements</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-oci-waas-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/oci-waas-api-spec/${oci-waas-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>waas</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>waas</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>waas</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-batchservice-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/batchservice-api-spec/${batchservice-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>batch</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>batch</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>batch</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-fn-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/fn-api-spec/${fn-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>functions</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>functions</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>functions</serviceHostName>
                <isRegionalClient.functionsinvoke>false</isRegionalClient.functionsinvoke>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-budgets-control-plane-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/budgets-control-plane-spec/${budgets-control-plane-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>budget</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>budget</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>None</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-quotas-control-plane-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/quotas-control-plane-api-spec/${quotas-control-plane-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>limits</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>limits</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-digital-assistant-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/digital-assistant-spec/${digital-assistant-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>oda</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>oda</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-csg-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/csg-api-spec/${csg-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>storagegateway</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>storagegateway</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-dts-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/dts-api-spec/${dts-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>dts</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>dts</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-public-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/public-api-spec/${public-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>apigateway</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>apigateway</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-events-control-plane-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/events-control-plane-spec/${events-control-plane-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>events</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>events</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-cloud-incident-management-service-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/cloud-incident-management-service-spec/${cloud-incident-management-service-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>cims</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>cims</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-ndcs-control-plane-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/ndcs-control-plane-spec/${ndcs-control-plane-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>nosql</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>nosql</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-datacatalog-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/datacatalog-api-spec/${datacatalog-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>datacatalog</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>datacatalog</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-cec-public-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/cec-public-spec/${cec-public-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>oce</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>oce</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-odsc-pegasus-control-plane-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/odsc-pegasus-control-plane-spec/${odsc-pegasus-control-plane-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>datascience</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>datascience</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-bds-cp-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/bds-cp-spec/${bds-cp-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>bds</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>bds</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-analytics-control-plane-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/analytics-control-plane-api-spec/${analytics-control-plane-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>analytics</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>analytics</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-oracle-integration-cp-apiserver-user-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/oracle-integration-cp-apiserver-user-spec/${oracle-integration-cp-apiserver-user-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>integration</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>integration</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-kam-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/kam-api-spec/${kam-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>kam</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>kam</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-ibex-frontend-public-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/ibex-frontend-public-spec/${ibex-frontend-public-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>publicloggingsearch</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>publicloggingsearch</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-osms-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/osms-spec/${osms-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>osmanagement</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>osmanagement</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-ams-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/ams-spec/${ams-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>applicationmigration</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>applicationmigration</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-service_api_spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/service_api_spec/${service_api_spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>dataflow</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>dataflow</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-mysqlaas-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/mysqlaas-api-spec/${mysqlaas-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>mysql</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>mysql</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <isTagAvailable.analytics>false</isTagAvailable.analytics>
                <isTagAvailable.workrequests>false</isTagAvailable.workrequests>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-oci-sms-dp-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/oci-sms-dp-api-spec/${oci-sms-dp-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>secrets</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>secrets</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-oci-sms-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/oci-sms-api-spec/${oci-sms-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>vault</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>vault</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-oracle-blockchain-platform-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/oracle-blockchain-platform-spec/${oracle-blockchain-platform-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>blockchain</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>blockchain</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-ads-control-plane-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/ads-control-plane-spec/${ads-control-plane-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>datasafe</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>datasafe</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-compliance-document-service-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/compliance-document-service-spec/${compliance-document-service-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>compdocsapi</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>compdocsapi</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-dis-sdk-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/dis-sdk-spec/${dis-sdk-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>dataintegration</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>dataintegration</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-hydra-controlplane-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/hydra-controlplane-api-spec/${hydra-controlplane-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>logging</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>logging</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.0.0</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>.yardoc</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>doc</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>variants</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/core</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/identity</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/loadbalancer</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/database</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/objectstorage</directory>
              <excludes>
                <exclude>util.rb</exclude>
                <exclude>transfer</exclude>
                <exclude>transfer/*</exclude>
                <exclude>transfer/multipart/*</exclude>
                <exclude>transfer/multipart/internal/*</exclude>
              </excludes>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/audit</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>.yardoc</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>doc</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>variants</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/dns</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/filestorage</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/email</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/kms</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/resourcesearch</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/containerengine</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/resourcemanager</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/telemetry</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/workrequests</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/ons</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/healthchecks</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/streaming</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/cache</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/marketplace</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/autoscaling</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/usage</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/announcementsservice</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/waas</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/batch</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/functions</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/budget</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/limits</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/oda</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/storagegateway</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/dts</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/apigateway</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/events</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/cims</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/nosql</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/datacatalog</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/oce</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/datascience</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/bds</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/analytics</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/integration</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/kam</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/publicloggingsearch</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/osmanagement</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/applicationmigration</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/dataflow</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/mysql</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/secrets</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/vault</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/blockchain</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/datasafe</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/compdocsapi</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/dataintegration</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/logging</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.oracle.pic.commons</groupId>
        <artifactId>coreservices-api-spec</artifactId>
        <version>0.2.1172</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.identity</groupId>
        <artifactId>identity-control-plane-api-spec</artifactId>
        <version>0.4.123</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.casper</groupId>
        <artifactId>casper-api-spec</artifactId>
        <version>1.1.322</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.lb</groupId>
        <artifactId>oralb-api-spec</artifactId>
        <version>4.0.88</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.dbaas</groupId>
        <artifactId>dbaas-api-spec</artifactId>
        <version>0.1.412</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.ffsw</groupId>
        <artifactId>fss-api-spec</artifactId>
        <version>0.0.26</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.sherlock</groupId>
        <artifactId>hemlock-spec</artifactId>
        <version>1.0.3</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.email</groupId>
        <artifactId>email-api-spec</artifactId>
        <version>1.0.5</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.dns.pub</groupId>
        <artifactId>public-dns-api-spec</artifactId>
        <version>2.0.68</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.orchestration.orm</groupId>
        <artifactId>maestro-spec</artifactId>
        <version>0.1.12</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.kms</groupId>
        <artifactId>kms-api-spec</artifactId>
        <version>0.3.53</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.query</groupId>
        <artifactId>resource-query-service-spec</artifactId>
        <version>0.0.73</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.clusters</groupId>
        <artifactId>clusters-api-spec</artifactId>
        <version>1.1.16</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.telemetry.api</groupId>
        <artifactId>telemetry-public-api-spec</artifactId>
        <version>1.0.2</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.commons.workrequests</groupId>
        <artifactId>workrequests-api-spec</artifactId>
        <version>0.0.17</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.ons</groupId>
        <artifactId>ons-gateway-spec</artifactId>
        <version>2.1.245</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci</groupId>
        <artifactId>healthchecks-api-spec</artifactId>
        <version>1.2.0-20190917.134531-2</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.oss</groupId>
        <artifactId>rest-api-spec</artifactId>
        <version>0.3.663</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oracache</groupId>
        <artifactId>oracache-public-api</artifactId>
        <version>1.0.0-26</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci.marketplace</groupId>
        <artifactId>marketplace-consumer-service-spec</artifactId>
        <version>0.1.993</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.autoscaling.api</groupId>
        <artifactId>autoscaling-public-api-spec</artifactId>
        <version>0.0.53</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.usage</groupId>
        <artifactId>usage-proxy-spec</artifactId>
        <version>0.0.3</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.announcements</groupId>
        <artifactId>announcements-service-spec</artifactId>
        <version>1.0.9</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci.waas</groupId>
        <artifactId>oci-waas-api-spec</artifactId>
        <version>1.2.962</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.obcs</groupId>
        <artifactId>batchservice-api-spec</artifactId>
        <version>0.1.14</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.functions</groupId>
        <artifactId>fn-api-spec</artifactId>
        <version>1.1.0</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci.usage.budgets</groupId>
        <artifactId>budgets-control-plane-spec</artifactId>
        <version>2.4.6</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci.quotas</groupId>
        <artifactId>quotas-control-plane-api-spec</artifactId>
        <version>0.0.10</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.oda.cp</groupId>
        <artifactId>digital-assistant-spec</artifactId>
        <version>0.0.6</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci.csg</groupId>
        <artifactId>csg-api-spec</artifactId>
        <version>1.0.21</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.rhino</groupId>
        <artifactId>dts-api-spec</artifactId>
        <version>1.0.014</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.apigw</groupId>
        <artifactId>public-api-spec</artifactId>
        <version>1.6.10</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.events</groupId>
        <artifactId>events-control-plane-spec</artifactId>
        <version>0.1.29</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.custops.cims</groupId>
        <artifactId>cloud-incident-management-service-spec</artifactId>
        <version>2.0.72</version>
      </dependency>
      <dependency>
        <groupId>oracle.nosql.oci.controlplane</groupId>
        <artifactId>ndcs-control-plane-spec</artifactId>
        <version>0.1.5</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.dcat</groupId>
        <artifactId>datacatalog-api-spec</artifactId>
        <version>1.0.0-2001160234</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.cec.provisioning.controlplane</groupId>
        <artifactId>cec-public-spec</artifactId>
        <version>20.21.7</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.odsc.pegasus</groupId>
        <artifactId>odsc-pegasus-control-plane-spec</artifactId>
        <version>0.1.328</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.bds</groupId>
        <artifactId>bds-cp-spec</artifactId>
        <version>0.1.34</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.analytics</groupId>
        <artifactId>analytics-control-plane-api-spec</artifactId>
        <version>1.0.0</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oracleintegration.spec</groupId>
        <artifactId>oracle-integration-cp-apiserver-user-spec</artifactId>
        <version>1.0.10</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.kam</groupId>
        <artifactId>kam-api-spec</artifactId>
        <version>0.0.1-20191023.164232-5</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci.hydra.ibex</groupId>
        <artifactId>ibex-frontend-public-spec</artifactId>
        <version>1.0.1334</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.osms.api</groupId>
        <artifactId>osms-spec</artifactId>
        <version>0.1.0-0</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.migration.application</groupId>
        <artifactId>ams-spec</artifactId>
        <version>0.1.36</version>
      </dependency>
      <dependency>
        <groupId>oracle.dfcs.server</groupId>
        <artifactId>service_api_spec</artifactId>
        <version>1.0.204-RELEASEPREVIEW</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci.mysql</groupId>
        <artifactId>mysqlaas-api-spec</artifactId>
        <version>10.3.9</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.ocisms.dataplane</groupId>
        <artifactId>oci-sms-dp-api-spec</artifactId>
        <version>0.0.13</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.ocisms.controlplane</groupId>
        <artifactId>oci-sms-api-spec</artifactId>
        <version>0.0.16</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.blockchain</groupId>
        <artifactId>oracle-blockchain-platform-spec</artifactId>
        <version>20.2.1</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.ads.admin.cp</groupId>
        <artifactId>ads-control-plane-spec</artifactId>
        <version>200402.00</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.compdocs</groupId>
        <artifactId>compliance-document-service-spec</artifactId>
        <version>0.1.173</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.dis</groupId>
        <artifactId>dis-sdk-spec</artifactId>
        <version>1.0.0-111</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.hydra.controlplane</groupId>
        <artifactId>hydra-controlplane-api-spec</artifactId>
        <version>0.0.524</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
</project>