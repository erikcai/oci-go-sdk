<?xml version='1.0' encoding='UTF-8'?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <groupId>com.oracle.pic.commons</groupId>
    <artifactId>pic-pom</artifactId>
    <version>0.4.3</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.oci.sdk</groupId>
  <artifactId>go-sdk</artifactId>
  <version>0.0.1</version>
  <name>Public Go SDK</name>
  <properties>
    <spec-temp-dir>${project.build.directory}/swagger</spec-temp-dir>
    <preferred-temp-dir>${project.build.directory}/preferred</preferred-temp-dir>
    <preprocessed-temp-dir>${project.build.directory}/preprocessed</preprocessed-temp-dir>
    <enabled-groups-file>${project.basedir}/preview-sdk.txt</enabled-groups-file>
    <enabled-groups-dir>${project.basedir}/codegenConfig/enabledGroups</enabled-groups-dir>
    <feature-id-file>${project.basedir}/featureId.yaml</feature-id-file>
    <feature-id-dir>${project.basedir}/codegenConfig/featureIds</feature-id-dir>
    <fullyQualifiedProjectName>${env.PROJECT_NAME}</fullyQualifiedProjectName>
    <generationType>PREVIEW</generationType>
    <inceptionYear>2017</inceptionYear>
    <coreservices-api-spec-spec-file>source/coreservices-api-spec-20160918.cond.yaml</coreservices-api-spec-spec-file>
    <identity-control-plane-api-spec-preview-spec-file>identity-control-plane-api-spec-20160918.yaml</identity-control-plane-api-spec-preview-spec-file>
    <casper-api-spec-spec-file>source/casper-api.cond.yaml</casper-api-spec-spec-file>
    <oralb-api-spec-spec-file>source/spec-20170115.cond.yaml</oralb-api-spec-spec-file>
    <dbaas-api-spec-spec-file>source/dbaas-api-spec-20160918.cond.yaml</dbaas-api-spec-spec-file>
    <fss-api-spec-spec-file>fss-api-spec-20171215.yaml</fss-api-spec-spec-file>
    <hemlock-spec-spec-file>hemlock-api-20160918.yaml</hemlock-spec-spec-file>
    <email-api-spec-spec-file>source/email-api-spec.cond.yaml</email-api-spec-spec-file>
    <public-dns-api-spec-spec-file>source/public-dns-api-spec.cond.yaml</public-dns-api-spec-spec-file>
    <maestro-spec-spec-file>api.yaml</maestro-spec-spec-file>
    <kms-api-spec-spec-file>kms-api-spec-20180608.yaml</kms-api-spec-spec-file>
    <resource-query-service-spec-spec-file>rqs.yaml</resource-query-service-spec-spec-file>
    <clusters-api-spec-spec-file>source/clusters-api-spec.cond.yaml</clusters-api-spec-spec-file>
    <telemetry-public-api-spec-spec-file>source/telemetry-api.cond.yaml</telemetry-public-api-spec-spec-file>
    <workrequests-api-spec-spec-file>workrequests-api-spec.yaml</workrequests-api-spec-spec-file>
    <ons-gateway-spec-spec-file>api.yaml</ons-gateway-spec-spec-file>
    <healthchecks-api-spec-spec-file>ovp-api.yaml</healthchecks-api-spec-spec-file>
    <events-control-plane-spec-spec-file>source/events-control-plane-spec.cond.yaml</events-control-plane-spec-spec-file>
    <rest-api-spec-spec-file>api.yaml</rest-api-spec-spec-file>
    <oracache-public-api-spec-file>oracache-public-api-20181201.yaml</oracache-public-api-spec-file>
    <marketplace-api-spec-spec-file>source/marketplace-api-swagger.cond.yaml</marketplace-api-spec-spec-file>
    <autoscaling-public-api-spec-spec-file>source/autoscaling-api-spec.cond.yaml</autoscaling-public-api-spec-spec-file>
    <usage-proxy-spec-spec-file>api.yaml</usage-proxy-spec-spec-file>
    <announcements-service-spec-spec-file>source/announcement-service.cond.yaml</announcements-service-spec-spec-file>
    <oci-waas-api-spec-spec-file>oci-waas-api-spec.cond.yaml</oci-waas-api-spec-spec-file>
    <ads-control-plane-spec-spec-file>api.yaml</ads-control-plane-spec-spec-file>
    <batchservice-api-spec-spec-file>source/batchservice.cond.yaml</batchservice-api-spec-spec-file>
  </properties>
  <dependencies>
    <dependency>
      <groupId>com.oracle.pic.commons</groupId>
      <artifactId>coreservices-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.identity</groupId>
      <artifactId>identity-control-plane-api-spec-preview</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.casper</groupId>
      <artifactId>casper-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.lb</groupId>
      <artifactId>oralb-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.dbaas</groupId>
      <artifactId>dbaas-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.ffsw</groupId>
      <artifactId>fss-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.sherlock</groupId>
      <artifactId>hemlock-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.email</groupId>
      <artifactId>email-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.dns.pub</groupId>
      <artifactId>public-dns-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.orchestration.orm</groupId>
      <artifactId>maestro-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.kms</groupId>
      <artifactId>kms-api-spec-20180608</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.query</groupId>
      <artifactId>resource-query-service-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.clusters</groupId>
      <artifactId>clusters-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.telemetry.api</groupId>
      <artifactId>telemetry-public-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.commons.workrequests</groupId>
      <artifactId>workrequests-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.ons</groupId>
      <artifactId>ons-gateway-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.oci</groupId>
      <artifactId>healthchecks-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.events</groupId>
      <artifactId>events-control-plane-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.oss</groupId>
      <artifactId>rest-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.oracache</groupId>
      <artifactId>oracache-public-api</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.marketplace</groupId>
      <artifactId>marketplace-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.autoscaling.api</groupId>
      <artifactId>autoscaling-public-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.usage</groupId>
      <artifactId>usage-proxy-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.announcements</groupId>
      <artifactId>announcements-service-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.oci.waas</groupId>
      <artifactId>oci-waas-api-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.ads.admin.cp</groupId>
      <artifactId>ads-control-plane-spec</artifactId>
    </dependency>
    <dependency>
      <groupId>com.oracle.pic.obcs</groupId>
      <artifactId>batchservice-api-spec</artifactId>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>timestamp-property</id>
            <goals>
              <goal>timestamp-property</goal>
            </goals>
            <phase>validate</phase>
            <configuration>
              <name>current.year</name>
              <pattern>yyyy</pattern>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.10</version>
        <executions>
          <execution>
            <id>unpack-coreservices-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.commons</groupId>
                  <artifactId>coreservices-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/coreservices-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-identity-control-plane-api-spec-preview</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.identity</groupId>
                  <artifactId>identity-control-plane-api-spec-preview</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/identity-control-plane-api-spec-preview</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-casper-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.casper</groupId>
                  <artifactId>casper-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/casper-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-oralb-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.lb</groupId>
                  <artifactId>oralb-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/oralb-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-dbaas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.dbaas</groupId>
                  <artifactId>dbaas-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/dbaas-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-fss-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.ffsw</groupId>
                  <artifactId>fss-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/fss-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-hemlock-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.sherlock</groupId>
                  <artifactId>hemlock-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/hemlock-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-email-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.email</groupId>
                  <artifactId>email-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/email-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-public-dns-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.dns.pub</groupId>
                  <artifactId>public-dns-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/public-dns-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-maestro-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.orchestration.orm</groupId>
                  <artifactId>maestro-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/maestro-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-kms-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.kms</groupId>
                  <artifactId>kms-api-spec-20180608</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/kms-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-resource-query-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.query</groupId>
                  <artifactId>resource-query-service-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/resource-query-service-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-clusters-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.clusters</groupId>
                  <artifactId>clusters-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/clusters-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-telemetry-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.telemetry.api</groupId>
                  <artifactId>telemetry-public-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/telemetry-public-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-workrequests-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.commons.workrequests</groupId>
                  <artifactId>workrequests-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/workrequests-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-ons-gateway-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.ons</groupId>
                  <artifactId>ons-gateway-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/ons-gateway-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-healthchecks-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci</groupId>
                  <artifactId>healthchecks-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/healthchecks-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-events-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.events</groupId>
                  <artifactId>events-control-plane-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/events-control-plane-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-rest-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.oss</groupId>
                  <artifactId>rest-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/rest-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-oracache-public-api</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oracache</groupId>
                  <artifactId>oracache-public-api</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/oracache-public-api</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-marketplace-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.marketplace</groupId>
                  <artifactId>marketplace-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/marketplace-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-autoscaling-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.autoscaling.api</groupId>
                  <artifactId>autoscaling-public-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/autoscaling-public-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-usage-proxy-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.usage</groupId>
                  <artifactId>usage-proxy-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/usage-proxy-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-announcements-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.announcements</groupId>
                  <artifactId>announcements-service-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/announcements-service-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-oci-waas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.oci.waas</groupId>
                  <artifactId>oci-waas-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/oci-waas-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-ads-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.ads.admin.cp</groupId>
                  <artifactId>ads-control-plane-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/ads-control-plane-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-batchservice-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.oracle.pic.obcs</groupId>
                  <artifactId>batchservice-api-spec</artifactId>
                  <type>jar</type>
                  <includes>**/*</includes>
                  <outputDirectory>${spec-temp-dir}/batchservice-api-spec</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.oracle.oci.sdk.utilities</groupId>
        <artifactId>spec-conditionals-preprocessor-plugin</artifactId>
        <version>1.0.6-SNAPSHOT</version>
        <executions>
          <execution>
            <id>spec-conditionals-prefer-coreservices-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/coreservices-api-spec/source/${coreservices-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/coreservices-api-spec/${coreservices-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/coreservices-api-spec/${coreservices-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-coreservices-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/coreservices-api-spec/${coreservices-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/coreservices-api-spec/${coreservices-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-identity-control-plane-api-spec-preview</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/identity-control-plane-api-spec-preview/source/${identity-control-plane-api-spec-preview-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/identity-control-plane-api-spec-preview/${identity-control-plane-api-spec-preview-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/identity-control-plane-api-spec-preview/${identity-control-plane-api-spec-preview-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-identity-control-plane-api-spec-preview</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/identity-control-plane-api-spec-preview/${identity-control-plane-api-spec-preview-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/identity-control-plane-api-spec-preview/${identity-control-plane-api-spec-preview-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-casper-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/casper-api-spec/source/${casper-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/casper-api-spec/${casper-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/casper-api-spec/${casper-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-casper-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/casper-api-spec/${casper-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/casper-api-spec/${casper-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-oralb-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/oralb-api-spec/source/${oralb-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/oralb-api-spec/${oralb-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/oralb-api-spec/${oralb-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-oralb-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/oralb-api-spec/${oralb-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/oralb-api-spec/${oralb-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-dbaas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/dbaas-api-spec/source/${dbaas-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/dbaas-api-spec/${dbaas-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/dbaas-api-spec/${dbaas-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-dbaas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/dbaas-api-spec/${dbaas-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/dbaas-api-spec/${dbaas-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-fss-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/fss-api-spec/source/${fss-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/fss-api-spec/${fss-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/fss-api-spec/${fss-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-fss-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/fss-api-spec/${fss-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/fss-api-spec/${fss-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-hemlock-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/hemlock-spec/source/${hemlock-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/hemlock-spec/${hemlock-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/hemlock-spec/${hemlock-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-hemlock-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/hemlock-spec/${hemlock-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/hemlock-spec/${hemlock-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-email-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/email-api-spec/source/${email-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/email-api-spec/${email-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/email-api-spec/${email-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-email-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/email-api-spec/${email-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/email-api-spec/${email-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-public-dns-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/public-dns-api-spec/source/${public-dns-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/public-dns-api-spec/${public-dns-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/public-dns-api-spec/${public-dns-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-public-dns-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/public-dns-api-spec/${public-dns-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/public-dns-api-spec/${public-dns-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-maestro-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/maestro-spec/source/${maestro-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/maestro-spec/${maestro-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/maestro-spec/${maestro-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-maestro-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/maestro-spec/${maestro-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/maestro-spec/${maestro-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-kms-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/kms-api-spec/source/${kms-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/kms-api-spec/${kms-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/kms-api-spec/${kms-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-kms-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/kms-api-spec/${kms-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/kms-api-spec/${kms-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-resource-query-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/resource-query-service-spec/source/${resource-query-service-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/resource-query-service-spec/${resource-query-service-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/resource-query-service-spec/${resource-query-service-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-resource-query-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/resource-query-service-spec/${resource-query-service-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/resource-query-service-spec/${resource-query-service-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-clusters-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/clusters-api-spec/source/${clusters-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/clusters-api-spec/${clusters-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/clusters-api-spec/${clusters-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-clusters-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/clusters-api-spec/${clusters-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/clusters-api-spec/${clusters-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-telemetry-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/telemetry-public-api-spec/source/${telemetry-public-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/telemetry-public-api-spec/${telemetry-public-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/telemetry-public-api-spec/${telemetry-public-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-telemetry-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/telemetry-public-api-spec/${telemetry-public-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/telemetry-public-api-spec/${telemetry-public-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-workrequests-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/workrequests-api-spec/source/${workrequests-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/workrequests-api-spec/${workrequests-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/workrequests-api-spec/${workrequests-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-workrequests-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/workrequests-api-spec/${workrequests-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/workrequests-api-spec/${workrequests-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-ons-gateway-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/ons-gateway-spec/source/${ons-gateway-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/ons-gateway-spec/${ons-gateway-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/ons-gateway-spec/${ons-gateway-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-ons-gateway-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/ons-gateway-spec/${ons-gateway-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/ons-gateway-spec/${ons-gateway-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-healthchecks-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/healthchecks-api-spec/source/${healthchecks-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/healthchecks-api-spec/${healthchecks-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/healthchecks-api-spec/${healthchecks-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-healthchecks-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/healthchecks-api-spec/${healthchecks-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/healthchecks-api-spec/${healthchecks-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-events-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/events-control-plane-spec/source/${events-control-plane-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/events-control-plane-spec/${events-control-plane-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/events-control-plane-spec/${events-control-plane-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-events-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/events-control-plane-spec/${events-control-plane-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/events-control-plane-spec/${events-control-plane-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-rest-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/rest-api-spec/source/${rest-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/rest-api-spec/${rest-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/rest-api-spec/${rest-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-rest-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/rest-api-spec/${rest-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/rest-api-spec/${rest-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-oracache-public-api</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/oracache-public-api/source/${oracache-public-api-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/oracache-public-api/${oracache-public-api-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/oracache-public-api/${oracache-public-api-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-oracache-public-api</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/oracache-public-api/${oracache-public-api-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/oracache-public-api/${oracache-public-api-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-marketplace-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/marketplace-api-spec/source/${marketplace-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/marketplace-api-spec/${marketplace-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/marketplace-api-spec/${marketplace-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-marketplace-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/marketplace-api-spec/${marketplace-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/marketplace-api-spec/${marketplace-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-autoscaling-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/autoscaling-public-api-spec/source/${autoscaling-public-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/autoscaling-public-api-spec/${autoscaling-public-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/autoscaling-public-api-spec/${autoscaling-public-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-autoscaling-public-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/autoscaling-public-api-spec/${autoscaling-public-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/autoscaling-public-api-spec/${autoscaling-public-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-usage-proxy-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/usage-proxy-spec/source/${usage-proxy-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/usage-proxy-spec/${usage-proxy-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/usage-proxy-spec/${usage-proxy-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-usage-proxy-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/usage-proxy-spec/${usage-proxy-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/usage-proxy-spec/${usage-proxy-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-announcements-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/announcements-service-spec/source/${announcements-service-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/announcements-service-spec/${announcements-service-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/announcements-service-spec/${announcements-service-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-announcements-service-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/announcements-service-spec/${announcements-service-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/announcements-service-spec/${announcements-service-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-oci-waas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/oci-waas-api-spec/source/${oci-waas-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/oci-waas-api-spec/${oci-waas-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/oci-waas-api-spec/${oci-waas-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-oci-waas-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/oci-waas-api-spec/${oci-waas-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/oci-waas-api-spec/${oci-waas-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-ads-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/ads-control-plane-spec/source/${ads-control-plane-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/ads-control-plane-spec/${ads-control-plane-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/ads-control-plane-spec/${ads-control-plane-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-ads-control-plane-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/ads-control-plane-spec/${ads-control-plane-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/ads-control-plane-spec/${ads-control-plane-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-prefer-batchservice-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>prefer</goal>
            </goals>
            <configuration>
              <inputFiles>
                <inputFile>${spec-temp-dir}/batchservice-api-spec/source/${batchservice-api-spec-spec-file}</inputFile>
                <inputFile>${spec-temp-dir}/batchservice-api-spec/${batchservice-api-spec-spec-file}</inputFile>
              </inputFiles>
              <outputFile>${preferred-temp-dir}/batchservice-api-spec/${batchservice-api-spec-spec-file}</outputFile>
            </configuration>
          </execution>
          <execution>
            <id>spec-conditionals-preprocess-batchservice-api-spec</id>
            <phase>initialize</phase>
            <goals>
              <goal>preprocess</goal>
            </goals>
            <configuration>
              <inputFile>${preferred-temp-dir}/batchservice-api-spec/${batchservice-api-spec-spec-file}</inputFile>
              <outputFile>${preprocessed-temp-dir}/batchservice-api-spec/${batchservice-api-spec-spec-file}</outputFile>
              <groupFile>${enabled-groups-file}</groupFile>
              <groupFileCollectionDir>${enabled-groups-dir}</groupFileCollectionDir>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.oracle.bmc.sdk</groupId>
        <artifactId>bmc-sdk-swagger-maven-plugin</artifactId>
        <version>1.58-SNAPSHOT</version>
        <configuration>
          <isTestGenerationEnabled>true</isTestGenerationEnabled>
        </configuration>
        <executions>
          <execution>
            <id>go-public-sdk-identity-control-plane-api-spec-preview</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/identity-control-plane-api-spec-preview/${identity-control-plane-api-spec-preview-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <specGenerationType>${generationType}</specGenerationType>
              <basePackage>identity</basePackage>
              <additionalProperties>
                <specName>identity</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>identity</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${project.basedir}/featureId.yaml</featureIdConfigFile>
              <featureIdConfigDir>${project.basedir}/codegenConfig/featureIds</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-coreservices-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/coreservices-api-spec/${coreservices-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>core</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>core</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>iaas</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-casper-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/casper-api-spec/${casper-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>objectstorage</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>objectstorage</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>objectstorage</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-oralb-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/oralb-api-spec/${oralb-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>loadbalancer</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>loadbalancer</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>iaas</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-dbaas-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/dbaas-api-spec/${dbaas-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>database</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>database</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>database</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-fss-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/fss-api-spec/${fss-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>filestorage</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>filestorage</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>filestorage</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-hemlock-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/hemlock-spec/${hemlock-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>audit</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>audit</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>audit</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-email-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/email-api-spec/${email-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>email</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>email</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>email</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-public-dns-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/public-dns-api-spec/${public-dns-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>dns</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>dns</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>dns</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-maestro-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/maestro-spec/${maestro-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>resourcemanager</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>resourcemanager</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>resourcemanager</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-kms-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/kms-api-spec/${kms-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>keymanagement</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>keymanagement</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>kms</serviceHostName>
                <isRegionalClient.kmscrypto>false</isRegionalClient.kmscrypto>
                <isRegionalClient.kmsmanagement>false</isRegionalClient.kmsmanagement>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-resource-query-service-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/resource-query-service-spec/${resource-query-service-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>resourcesearch</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>resourcesearch</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>query</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-clusters-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/clusters-api-spec/${clusters-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>OCI</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <renamingConfigFile>${project.basedir}/renaming_configs/container_engine.yaml</renamingConfigFile>
              <additionalProperties>
                <specName>containerengine</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>containerengine</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-telemetry-public-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/telemetry-public-api-spec/${telemetry-public-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>monitoring</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>monitoring</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>telemetry</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-workrequests-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/workrequests-api-spec/${workrequests-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>workrequests</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>workrequests</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>iaas</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
              <isTestGenerationEnabled>true</isTestGenerationEnabled>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-ons-gateway-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/ons-gateway-spec/${ons-gateway-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>ons</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>ons</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>notification</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-healthchecks-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/healthchecks-api-spec/${healthchecks-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>healthchecks</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>healthchecks</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>healthchecks</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-events-control-plane-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/events-control-plane-spec/${events-control-plane-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>cloudevents</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>cloudevents</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>cloudevents</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-rest-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/rest-api-spec/${rest-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>streaming</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>streaming</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>streams</serviceHostName>
                <isRegionalClient.stream>false</isRegionalClient.stream>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-oracache-public-api</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/oracache-public-api/${oracache-public-api-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>cache</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>cache</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>caching</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-marketplace-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/marketplace-api-spec/${marketplace-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>marketplace</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>marketplace</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>marketplace</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-autoscaling-public-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/autoscaling-public-api-spec/${autoscaling-public-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>autoscaling</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>autoscaling</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>autoscaling</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-usage-proxy-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/usage-proxy-spec/${usage-proxy-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>usage</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>usage</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>identity</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-announcements-service-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/announcements-service-spec/${announcements-service-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>announcementsservice</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>announcementsservice</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>announcements</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-oci-waas-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/oci-waas-api-spec/${oci-waas-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>waas</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>waas</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>waas</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-ads-control-plane-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/ads-control-plane-spec/${ads-control-plane-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>datasecurity</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>datasecurity</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>datasecurity</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
          <execution>
            <id>go-public-sdk-batchservice-api-spec</id>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <language>oracle-go-sdk</language>
              <specPath>${preprocessed-temp-dir}/batchservice-api-spec/${batchservice-api-spec-spec-file}</specPath>
              <outputDir>${env.GOPATH}/src/${fullyQualifiedProjectName}</outputDir>
              <basePackage>batch</basePackage>
              <specGenerationType>${generationType}</specGenerationType>
              <additionalProperties>
                <specName>batch</specName>
                <fqProjectName>${fullyQualifiedProjectName}</fqProjectName>
                <serviceHostName>batch</serviceHostName>
              </additionalProperties>
              <featureIdConfigFile>${feature-id-file}</featureIdConfigFile>
              <featureIdConfigDir>${feature-id-dir}</featureIdConfigDir>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.0.0</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>.yardoc</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>doc</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>variants</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/core</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/identity</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/loadbalancer</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/database</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/objectstorage</directory>
              <excludes>
                <exclude>util.rb</exclude>
                <exclude>transfer</exclude>
                <exclude>transfer/*</exclude>
                <exclude>transfer/multipart/*</exclude>
                <exclude>transfer/multipart/internal/*</exclude>
              </excludes>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/audit</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>.yardoc</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>doc</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>variants</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/dns</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/filestorage</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/email</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/kms</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/resourcesearch</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/containerengine</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/resourcemanager</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/telemetry</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/workrequests</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/ons</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/healthchecks</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/cloudevents</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/streaming</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/cache</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/marketplace</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/autoscaling</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/usage</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/announcementsservice</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/waas</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/datasecurity</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
            <fileset>
              <directory>lib/oci/batch</directory>
              <includes>
                <include>**/*</include>
              </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.oracle.pic.commons</groupId>
        <artifactId>coreservices-api-spec</artifactId>
        <version>0.2.353</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.identity</groupId>
        <artifactId>identity-control-plane-api-spec-preview</artifactId>
        <version>0.2.27-PREVIEW</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.casper</groupId>
        <artifactId>casper-api-spec</artifactId>
        <version>1.1.47-20181019.191010-2</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.lb</groupId>
        <artifactId>oralb-api-spec</artifactId>
        <version>2.0.1</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.dbaas</groupId>
        <artifactId>dbaas-api-spec</artifactId>
        <version>0.1.75</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.ffsw</groupId>
        <artifactId>fss-api-spec</artifactId>
        <version>0.0.12-20180621.212940-10</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.sherlock</groupId>
        <artifactId>hemlock-spec</artifactId>
        <version>0.1.9</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.email</groupId>
        <artifactId>email-api-spec</artifactId>
        <version>1.0.3</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.dns.pub</groupId>
        <artifactId>public-dns-api-spec</artifactId>
        <version>2.0.13</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.orchestration.orm</groupId>
        <artifactId>maestro-spec</artifactId>
        <version>0.0.5</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.kms</groupId>
        <artifactId>kms-api-spec-20180608</artifactId>
        <version>0.1.80</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.query</groupId>
        <artifactId>resource-query-service-spec</artifactId>
        <version>0.0.6</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.clusters</groupId>
        <artifactId>clusters-api-spec</artifactId>
        <version>1.0.12-20181204.114604-4</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.telemetry.api</groupId>
        <artifactId>telemetry-public-api-spec</artifactId>
        <version>1.0.0-20190117.225057-40</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.commons.workrequests</groupId>
        <artifactId>workrequests-api-spec</artifactId>
        <version>0.0.5</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.ons</groupId>
        <artifactId>ons-gateway-spec</artifactId>
        <version>1.0.908</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci</groupId>
        <artifactId>healthchecks-api-spec</artifactId>
        <version>0.0.1-20181210.154927-6</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.events</groupId>
        <artifactId>events-control-plane-spec</artifactId>
        <version>0.1.12</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.oss</groupId>
        <artifactId>rest-api-spec</artifactId>
        <version>0.1.181</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oracache</groupId>
        <artifactId>oracache-public-api</artifactId>
        <version>1.0.0-10</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.marketplace</groupId>
        <artifactId>marketplace-api-spec</artifactId>
        <version>1.9.4</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.autoscaling.api</groupId>
        <artifactId>autoscaling-public-api-spec</artifactId>
        <version>0.0.22</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.usage</groupId>
        <artifactId>usage-proxy-spec</artifactId>
        <version>0.0.3</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.announcements</groupId>
        <artifactId>announcements-service-spec</artifactId>
        <version>1.0.7</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.oci.waas</groupId>
        <artifactId>oci-waas-api-spec</artifactId>
        <version>1.0.410</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.ads.admin.cp</groupId>
        <artifactId>ads-control-plane-spec</artifactId>
        <version>18.4.6-1812220000</version>
      </dependency>
      <dependency>
        <groupId>com.oracle.pic.obcs</groupId>
        <artifactId>batchservice-api-spec</artifactId>
        <version>0.1.14</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
</project>